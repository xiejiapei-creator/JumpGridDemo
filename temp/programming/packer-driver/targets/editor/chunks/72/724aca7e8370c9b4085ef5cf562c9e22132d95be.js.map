{"version":3,"sources":["file:///Users/xiejiapei/Documents/3D%20Game/Jump/assets/Scipts/PlayerController.ts"],"names":["_decorator","Component","Vec3","input","Input","SkeletalAnimation","ccclass","property","PlayerController","type","_startJump","_jumpStep","_jumpTime","_curJumpSpeed","_curJumpTime","_curPos","_deltaPos","_curMoveIndex","_targetPos","setInputActive","active","on","EventType","MOUSE_UP","onMouseUp","off","event","getButton","jumpByStep","step","node","getPosition","add","CocosAnim","getState","speed","play","update","deltaTime","setPosition","onOnceJumpEnd","x","emit","reset"],"mappings":"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","sourcesContent":["import { _decorator, Component, Vec3, input, Input, EventMouse, Animation, SkeletalAnimation } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass(\"PlayerController\")\nexport class PlayerController extends Component {\n\n\n    // 引用模型动画的变量\n    @property({type: SkeletalAnimation})\n    public CocosAnim: SkeletalAnimation|null = null;\n\n    // 是否接收到跳跃指令\n    private _startJump: boolean = false;\n\n    // 跳跃步长\n    private _jumpStep: number = 0;\n    // 每次跳跃时长\n    private _jumpTime: number = 0.3;\n\n    // 当前跳跃速度\n    private _curJumpSpeed: number = 0;\n    // 当前跳跃时间\n    private _curJumpTime: number = 0;\n    // 当前角色位置\n    private _curPos: Vec3 = new Vec3();\n    // 每次跳跃过程中，当前帧移动位置差\n    private _deltaPos: Vec3 = new Vec3(0, 0, 0);\n    // 记录角色跳了多少步\n    private _curMoveIndex = 0;\n\n    // 角色目标位置\n    private _targetPos: Vec3 = new Vec3();\n\n    // 是否监听鼠标点击事件\n    setInputActive(active: boolean) {\n        if (active) {\n            input.on(Input.EventType.MOUSE_UP, this.onMouseUp, this);\n        } else {\n            input.off(Input.EventType.MOUSE_UP, this.onMouseUp, this);\n        }\n    }\n\n    // 按下鼠标\n    onMouseUp(event: EventMouse) {\n        if (event.getButton() === 0) {\n            this.jumpByStep(1);\n        } else if (event.getButton() === 2) {\n            this.jumpByStep(2);\n        }\n    }\n\n    // 跳跃指定步数\n    jumpByStep(step: number) {\n        if (this._startJump) {\n            return;\n        }\n        this._startJump = true;\n\n        this._jumpStep = step;\n\n        this._curJumpTime = 0;\n        this._curJumpSpeed = this._jumpStep / this._jumpTime;\n        \n        this.node.getPosition(this._curPos);\n        Vec3.add(this._targetPos, this._curPos, new Vec3(this._jumpStep, 0, 0));\n\n        if (this.CocosAnim) {\n            this.CocosAnim.getState('cocos_anim_jump').speed = 3.5; // 跳跃动画时间比较长，这里加速播放\n            this.CocosAnim.play('cocos_anim_jump'); // 播放跳跃动画\n        }\n\n        this._curMoveIndex += step;\n    }\n\n    // 更新数据\n    update (deltaTime: number) {\n        if (this._startJump) {\n            this._curJumpTime += deltaTime;\n            if (this._curJumpTime > this._jumpTime) {\n                // end\n                this.node.setPosition(this._targetPos);\n                this._startJump = false;\n                this.onOnceJumpEnd();\n            } else {\n                // tween\n                this.node.getPosition(this._curPos);\n                this._deltaPos.x = this._curJumpSpeed * deltaTime;\n                Vec3.add(this._curPos, this._curPos, this._deltaPos);\n                this.node.setPosition(this._curPos);\n            }\n        }\n    }\n\n    // 每次跳跃结束发出消息\n    onOnceJumpEnd() {\n        if (this.CocosAnim) {\n            this.CocosAnim.play('cocos_anim_idle');\n        }\n\n        this.node.emit('JumpEnd', this._curMoveIndex);\n    }\n\n    // 重置当前角色位置\n    reset() {\n        this._curMoveIndex = 0;\n    }\n}\n\n\n"]}