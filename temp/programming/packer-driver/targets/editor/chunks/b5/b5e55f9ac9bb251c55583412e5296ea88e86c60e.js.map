{"version":3,"sources":["file:///Users/xiejiapei/Documents/3D%20Game/Jump/assets/Scipts/GameManager.ts"],"names":["_decorator","Component","Prefab","instantiate","Node","Vec3","PlayerController","ccclass","property","BlockType","GameState","GameManager","type","_road","start","curState","GS_INIT","init","startMenu","active","generateRoad","playerCtrl","setInputActive","node","setPosition","ZERO","removeAllChildren","push","BT_STONE","i","roadLength","BT_NONE","Math","floor","random","j","length","block","spawnBlockByType","addChild","cubePrfb","value","GS_PLAYING","setTimeout","GS_END","onStartButtonClicked"],"mappings":"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","sourcesContent":["import { _decorator, Component, Prefab, instantiate, Node, CCInteger, Vec3 } from 'cc';\nimport { PlayerController } from './PlayerController';\nconst { ccclass, property } = _decorator;\n\n// 赛道格子类型，坑（BT_NONE）或者实路（BT_STONE）\nenum BlockType {\n    BT_NONE,\n    BT_STONE,\n};\n\n// 游戏状态\nenum GameState{\n    GS_INIT,\n    GS_PLAYING,\n    GS_END,\n};\n\n@ccclass(\"GameManager\")\nexport class GameManager extends Component {\n\n    // 赛道预制\n    @property({type: Prefab})\n    public cubePrfb: Prefab | null = null;\n\n    // 赛道长度\n    @property\n    public roadLength = 50;\n\n    // 玩家控制器\n    @property({type: PlayerController})\n    public playerCtrl: PlayerController | null = null;\n\n    // 动态开启/关闭开始菜单\n    @property({type: Node})\n    public startMenu: Node | null = null;\n\n    // 赛道\n    private _road: BlockType[] = [];\n\n    start () {\n        this.curState = GameState.GS_INIT;\n    }\n\n    // 初始化方法\n    init() {\n        // 激活主界面\n        if (this.startMenu) {\n            this.startMenu.active = true;\n        }\n\n        // 生成赛道\n        this.generateRoad();\n\n        // 控制玩家\n        if(this.playerCtrl){\n            // 禁止接收用户操作人物移动指令\n            this.playerCtrl.setInputActive(false);\n            // 重置人物位置\n            this.playerCtrl.node.setPosition(Vec3.ZERO);\n        }\n    }\n\n    // 生成道路\n    generateRoad() {\n        // 防止游戏重新开始时，赛道还是旧的赛道\n        // 因此，需要移除旧赛道，清除旧赛道数据\n        this.node.removeAllChildren();\n\n        // 创建新的赛道\n        this._road = [];\n        // 确保游戏运行时，人物一定站在实路上\n        this._road.push(BlockType.BT_STONE);\n\n        // 确定好每一格赛道类型\n        for (let i = 1; i < this.roadLength; i++) {\n            // 如果上一格赛道是坑，那么这一格一定不能为坑\n            if (this._road[i-1] === BlockType.BT_NONE) {\n                this._road.push(BlockType.BT_STONE);\n            } else {\n                this._road.push(Math.floor(Math.random() * 2));\n            }\n        }\n\n        // 根据赛道类型生成赛道\n        for (let j = 0; j < this._road.length; j++) {\n            let block = this.spawnBlockByType(this._road[j]);\n            // 判断是否生成了道路，因为 spawnBlockByType 有可能返回坑（值为 null）\n            if (block) {\n                this.node.addChild(block);\n                block.setPosition(j, -1.5, 0);\n            }\n        }\n    }\n\n    // 通过砖块类型生成相应砖块\n    spawnBlockByType(type: BlockType) {\n        if (!this.cubePrfb) {\n            return null;\n        }\n\n        let block: Node | null = null;\n        // 赛道类型为实路才生成\n        switch(type) {\n            case BlockType.BT_STONE:\n                block = instantiate(this.cubePrfb);\n                break;\n        }\n\n        return block;\n    }\n\n    // 切换游戏状态\n    set curState (value: GameState) {\n        switch(value) {\n            case GameState.GS_INIT:\n                this.init();\n                break;\n            case GameState.GS_PLAYING:\n                if (this.startMenu) {\n                    this.startMenu.active = false;\n                }\n\n                // 设置 active 为 true 时会直接开始监听鼠标事件，此时鼠标抬起事件还未派发\n                // 会出现的现象就是，游戏开始的瞬间人物已经开始移动\n                // 因此，这里需要做延迟处理\n                setTimeout(() => {\n                    if (this.playerCtrl) {\n                        this.playerCtrl.setInputActive(true);\n                    }\n                }, 0.1);\n                break;\n            case GameState.GS_END:\n                break;\n        }\n    }\n\n    // 点击按钮后进入游戏的 Playing 状态\n    onStartButtonClicked() {\n        this.curState = GameState.GS_PLAYING;\n    }\n}"]}