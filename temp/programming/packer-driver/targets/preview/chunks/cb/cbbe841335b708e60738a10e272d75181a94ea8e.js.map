{"version":3,"sources":["file:///Users/xiejiapei/Documents/3D%20Game/Jump/assets/Scipts/PlayerController.ts"],"names":["_decorator","Component","Vec3","systemEvent","SystemEvent","SkeletalAnimation","ccclass","property","PlayerController","type","_startJump","_jumpStep","_curJumpTime","_jumpTime","_curJumpSpeed","_curPos","_deltaPos","_targetPos","_curMoveIndex","start","reset","setInputActive","active","on","EventType","MOUSE_UP","onMouseUp","off","event","getButton","jumpByStep","step","node","getPosition","add","CocosAnim","getState","speed","play","onOnceJumpEnd","emit","update","deltaTime","setPosition","x"],"mappings":"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","sourcesContent":["import { _decorator, Component, Vec3, systemEvent, SystemEvent, EventMouse, Animation, SkeletalAnimation } from \"cc\";\nconst { ccclass, property } = _decorator;\n\n@ccclass(\"PlayerController\")\nexport class PlayerController extends Component {\n\n   // @property({type: Animation})\n   // public BodyAnim: Animation|null = null;\n   @property({type: SkeletalAnimation})\n   public CocosAnim: SkeletalAnimation|null = null;\n\n   // for fake tween\n   private _startJump: boolean = false;\n   private _jumpStep: number = 0;\n   private _curJumpTime: number = 0;\n   private _jumpTime: number = 0.3;\n   private _curJumpSpeed: number = 0;\n   private _curPos: Vec3 = new Vec3();\n   private _deltaPos: Vec3 = new Vec3(0, 0, 0);\n   private _targetPos: Vec3 = new Vec3();\n   private _curMoveIndex = 0;\n\n   start () {\n   }\n\n   reset() {\n       this._curMoveIndex = 0;\n   }\n\n   setInputActive(active: boolean) {\n       if (active) {\n           systemEvent.on(SystemEvent.EventType.MOUSE_UP, this.onMouseUp, this);\n       } else {\n           systemEvent.off(SystemEvent.EventType.MOUSE_UP, this.onMouseUp, this);\n       }\n   }\n\n   onMouseUp(event: EventMouse) {\n       if (event.getButton() === 0) {\n           this.jumpByStep(1);\n       } else if (event.getButton() === 2) {\n           this.jumpByStep(2);\n       }\n\n   }\n\n   jumpByStep(step: number) {\n       if (this._startJump) {\n           return;\n       }\n       this._startJump = true;\n       this._jumpStep = step;\n       this._curJumpTime = 0;\n       this._curJumpSpeed = this._jumpStep / this._jumpTime;\n       this.node.getPosition(this._curPos);\n       Vec3.add(this._targetPos, this._curPos, new Vec3(this._jumpStep, 0, 0));\n\n       if (this.CocosAnim) {\n           this.CocosAnim.getState('cocos_anim_jump').speed = 3.5; //跳跃动画时间比较长，这里加速播放\n           this.CocosAnim.play('cocos_anim_jump'); //播放跳跃动画\n       }\n\n       // if (this.BodyAnim) {\n       //     if (step === 1) {\n       //         //this.BodyAnim.play('oneStep');\n       //     } else if (step === 2) {\n       //         this.BodyAnim.play('twoStep');\n       //     }\n       // }\n\n       this._curMoveIndex += step;\n   }\n\n   onOnceJumpEnd() {\n       if (this.CocosAnim) {\n           this.CocosAnim.play('cocos_anim_idle');\n       }\n\n       this.node.emit('JumpEnd', this._curMoveIndex);\n   }\n\n   update (deltaTime: number) {\n       if (this._startJump) {\n           this._curJumpTime += deltaTime;\n           if (this._curJumpTime > this._jumpTime) {\n               // end\n               this.node.setPosition(this._targetPos);\n               this._startJump = false;\n               this.onOnceJumpEnd();\n           } else {\n               // tween\n               this.node.getPosition(this._curPos);\n               this._deltaPos.x = this._curJumpSpeed * deltaTime;\n               Vec3.add(this._curPos, this._curPos, this._deltaPos);\n               this.node.setPosition(this._curPos);\n           }\n       }\n   }\n}"]}