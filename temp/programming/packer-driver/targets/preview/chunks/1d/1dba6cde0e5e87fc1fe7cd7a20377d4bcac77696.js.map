{"version":3,"sources":["file:///Users/xiejiapei/Documents/3D%20Game/Jump/assets/Scipts/GameManager.ts"],"names":["_decorator","Component","Prefab","instantiate","Node","Label","CCInteger","Vec3","PlayerController","ccclass","property","BlockType","GameState","GameManager","type","_road","start","curState","GS_INIT","playerCtrl","node","on","onPlayerJumpEnd","init","startMenu","active","generateRoad","setInputActive","setPosition","ZERO","reset","value","GS_PLAYING","stepsLabel","string","setTimeout","GS_END","removeAllChildren","push","BT_STONE","i","roadLength","BT_NONE","Math","floor","random","linkedBlocks","j","length","spawnBlockByCount","lastPos","count","block","spawnBlockByType","addChild","setScale","cubePrfb","onStartButtonClicked","checkResult","moveIndex"],"mappings":"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","sourcesContent":["import { _decorator, Component, Prefab, instantiate, Node, Label, CCInteger, Vec3 } from 'cc';\nimport { PlayerController } from \"./PlayerController\";\nconst { ccclass, property } = _decorator;\n\n// 赛道格子类型，坑（BT_NONE）或者实路（BT_STONE）\nenum BlockType{\n    BT_NONE,\n    BT_STONE,\n};\n\nenum GameState{\n    GS_INIT,\n    GS_PLAYING,\n    GS_END,\n};\n\n@ccclass(\"GameManager\")\nexport class GameManager extends Component {\n\n    // 赛道预制\n    @property({type: Prefab})\n    public cubePrfb: Prefab | null = null;\n    // 赛道长度\n    @property({type: CCInteger})\n    public roadLength: Number = 50;\n    private _road: BlockType[] = [];\n    // 主界面根节点\n    @property({type: Node})\n    public startMenu: Node | null = null;\n    // 关联 Player 节点身上 PlayerController 组件\n    @property({type: PlayerController})\n    public playerCtrl: PlayerController | null = null;\n    // 关联步长文本组件\n    @property({type: Label})\n    public stepsLabel: Label | null = null!;\n\n    start () {\n        this.curState = GameState.GS_INIT;\n        this.playerCtrl?.node.on('JumpEnd', this.onPlayerJumpEnd, this);\n    }\n\n    init() {\n        // 激活主界面\n        if (this.startMenu) {\n            this.startMenu.active = true;\n        }\n        // 生成赛道\n        this.generateRoad();\n        if(this.playerCtrl){\n            // 禁止接收用户操作人物移动指令\n            this.playerCtrl.setInputActive(false);\n            // 重置人物位置\n            this.playerCtrl.node.setPosition(Vec3.ZERO);\n            // 重置已经移动的步长数据\n            this.playerCtrl.reset();\n        }\n    }\n\n    set curState (value: GameState) {\n        switch(value) {\n            case GameState.GS_INIT:\n                this.init();\n                break;\n            case GameState.GS_PLAYING: \n                if (this.startMenu) {\n                    this.startMenu.active = false;\n                }\n\n                if (this.stepsLabel) {\n                    this.stepsLabel.string = '0';   // 将步数重置为0\n                }\n                // 会出现的现象就是，游戏开始的瞬间人物已经开始移动\n                // 因此，这里需要做延迟处理\n                setTimeout(() => { \n                    if (this.playerCtrl) {\n                        this.playerCtrl.setInputActive(true);\n                    }\n                }, 0.1);\n                break;\n            case GameState.GS_END:\n                break;\n        }\n    }\n\n    generateRoad() {\n        // 防止游戏重新开始时，赛道还是旧的赛道\n        // 因此，需要移除旧赛道，清除旧赛道数据\n        this.node.removeAllChildren();\n        this._road = [];\n        // 确保游戏运行时，人物一定站在实路上\n        this._road.push(BlockType.BT_STONE);\n\n        // 确定好每一格赛道类型\n        for (let i = 1; i < this.roadLength; i++) {\n            // 如果上一格赛道是坑，那么这一格一定不能为坑\n            if (this._road[i-1] === BlockType.BT_NONE) {\n                this._road.push(BlockType.BT_STONE);\n            } else {\n                this._road.push(Math.floor(Math.random() * 2));\n            }\n        }\n\n        // 根据赛道类型生成赛道\n        let linkedBlocks = 0;\n        for (let j = 0; j < this._road.length; j++) {\n            if(this._road[j]) {\n                ++linkedBlocks;\n            }\n            if(this._road[j] == 0) {\n                if(linkedBlocks > 0) {\n                    this.spawnBlockByCount(j - 1, linkedBlocks);\n                    linkedBlocks = 0;\n                }\n            }        \n            if(this._road.length == j + 1) {\n                if(linkedBlocks > 0) {\n                    this.spawnBlockByCount(j, linkedBlocks);\n                    linkedBlocks = 0;\n                }\n            }\n        }\n    }\n\n    spawnBlockByCount(lastPos: number, count: number) {\n        let block: Node|null = this.spawnBlockByType(BlockType.BT_STONE);\n        if(block) {\n            this.node.addChild(block);\n            block?.setScale(count, 1, 1);\n            block?.setPosition(lastPos - (count - 1) * 0.5, -1.5, 0);\n        }\n    }\n    spawnBlockByType(type: BlockType) {\n        if (!this.cubePrfb) {\n            return null;\n        }\n\n        let block: Node|null = null;\n        switch(type) {\n            case BlockType.BT_STONE:\n                block = instantiate(this.cubePrfb);\n                break;\n        }\n\n        return block;\n    }\n\n    onStartButtonClicked() {\n        // 点击主界面 play 按钮，开始游戏\n        this.curState = GameState.GS_PLAYING;\n    }\n\n    checkResult(moveIndex: number) {\n        if (moveIndex < this.roadLength) {\n            // 跳到了坑上\n            if (this._road[moveIndex] == BlockType.BT_NONE) {\n                this.curState = GameState.GS_INIT;\n            }\n        } else {    // 跳过了最大长度\n            this.curState = GameState.GS_INIT;\n        }\n    }\n\n    onPlayerJumpEnd(moveIndex: number) {\n        if (this.stepsLabel) {\n            // 因为在最后一步可能出现步伐大的跳跃，但是此时无论跳跃是步伐大还是步伐小都不应该多增加分数\n            this.stepsLabel.string = '' + (moveIndex >= this.roadLength ? this.roadLength : moveIndex);\n        }\n        // 检查当前下落道路的类型，获取结果\n        this.checkResult(moveIndex);\n    }\n\n    // update (deltaTime: number) {\n    //     // Your update function goes here.\n    // }\n}"]}